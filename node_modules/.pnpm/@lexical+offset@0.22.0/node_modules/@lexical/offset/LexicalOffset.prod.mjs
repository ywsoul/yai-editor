/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

import{$getNodeByKey as t,$isTextNode as e,$createRangeSelection as n,$isElementNode as l}from"lexical";function o(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var s=o((function(t){const e=new URLSearchParams;e.append("code",t);for(let t=1;t<arguments.length;t++)e.append("v",arguments[t]);throw Error(`Minified Lexical error #${t}; visit https://lexical.dev/docs/error?${e} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}));class r{constructor(t,e,n=1){this._offsetMap=t,this._firstNode=e,this._blockOffsetSize=n}createSelectionFromOffsets(l,o,s){const r=this._firstNode;if(null===r)return null;let c=l,u=o,a=f(r,c,this._blockOffsetSize),d=f(r,u,this._blockOffsetSize);if(void 0!==s&&(c=i(c,a,s,this,this._blockOffsetSize),a=f(r,c,this._blockOffsetSize),u=i(u,d,s,this,this._blockOffsetSize),d=f(r,u,this._blockOffsetSize)),null===a||null===d)return null;let p=a.key,h=d.key;const g=t(p),_=t(h);if(null===g||null===_)return null;let y=0,v=0,k="element",x="element";if("text"===a.type){y=c-a.start,k="text";const t=g.getNextSibling();c!==u&&y===g.getTextContentSize()&&e(t)&&(y=0,p=t.__key)}else"inline"===a.type&&(p=g.getParentOrThrow().getKey(),y=u>a.start?a.end:a.start);"text"===d.type?(v=u-d.start,x="text"):"inline"===d.type&&(h=_.getParentOrThrow().getKey(),v=u>d.start?d.end:d.start);const S=n();return null===S?null:(S.anchor.set(p,y,k),S.focus.set(h,v,x),S)}getOffsetsFromSelection(t){const e=t.anchor,n=t.focus,l=this._offsetMap,o=e.offset,s=n.offset;let r=-1,i=-1;if("text"===e.type){const t=l.get(e.key);void 0!==t&&(r=t.start+o)}else{const t=e.getNode().getDescendantByIndex(o);if(null!==t){const e=l.get(t.getKey());if(void 0!==e){r=t.getIndexWithinParent()!==o?e.end:e.start}}}if("text"===n.type){const t=l.get(n.key);void 0!==t&&(i=t.start+n.offset)}else{const t=n.getNode().getDescendantByIndex(s);if(null!==t){const e=l.get(t.getKey());if(void 0!==e){i=t.getIndexWithinParent()!==s?e.end:e.start}}}return[r,i]}}function i(t,e,n,l,o){const s=n._offsetMap,r=l._offsetMap,i=new Set;let c=t,u=e;for(;null!==u;){const t=u.key,e=s.get(t),n=u.end-u.start;if(i.add(t),void 0===e)c+=n;else{const t=e.end-e.start;t!==n&&(c+=n-t)}const l=u.prev;if(null!==l){u=l;continue}let o=u.parent;for(;null!==o;){let t=o.prev;if(null!==t){const e=t.key,n=s.get(e),l=t.end-t.start;if(i.add(e),void 0===n)c+=l;else{const t=n.end-n.start;t!==l&&(c+=l-t)}t=t.prev}o=o.parent}break}const a=n._firstNode;if(null!==a){u=f(a,t,o);let e=!1;for(;null!==u;){if(!i.has(u.key)){e=!0;break}u=u.parent}if(!e)for(;null!==u;){const t=u.key;if(!i.has(t)){const e=r.get(t),n=u.end-u.start;if(void 0===e)c-=n;else{const t=e.end-e.start;n!==t&&(c+=t-n)}}u=u.prev}}return c}function f(t,e,n){let l=t;for(;null!==l;){if(e<l.end+("element"!==l.type||0===n?1:0)){const t=l.child;if(null!==t){l=t;continue}return l}const t=l.next;if(null===t)break;l=t}return null}function c(t,e,n,l,o,s){return{child:t,end:l,key:o,next:null,parent:s,prev:null,start:n,type:e}}function u(t,n,o,r,i,f){const u=r.get(n);void 0===u&&s(3);const p=t.offset;if(l(u)){const e=d(u,r),l=0===e.length,s=l?null:a(t,e,null,r,i,f);t.prevIsBlock&&!l||(t.prevIsBlock=!0,t.offset+=f);const h=c(s,"element",p,p,n,o);null!==s&&(s.parent=h);const g=t.offset;return h.end=g,i.set(n,h),h}t.prevIsBlock=!1;const h=e(u),g=h?u.__text.length:1,_=c(null,h?"text":"inline",p,t.offset+=g,n,o);return i.set(n,_),_}function a(t,e,n,l,o,s){let r=null,i=null;const f=e.length;for(let c=0;c<f;c++){const f=u(t,e[c],n,l,o,s);null===i?r=f:(f.prev=i,i.next=f),i=f}return r}function d(e,n){const l=[];let o=e.__first;for(;null!==o;){const e=null===n?t(o):n.get(o);null==e&&s(174),l.push(o),o=e.__next}return l}const p=d;function h(t,e=1,n){const l=(n||t._pendingEditorState||t._editorState)._nodeMap,o=l.get("root"),s=new Map,i=a({offset:0,prevIsBlock:!1},d(o,l),null,l,s,e);return new r(s,i,e)}export{d as $createChildrenArray,h as $createOffsetView,r as OffsetView,p as createChildrenArray};
