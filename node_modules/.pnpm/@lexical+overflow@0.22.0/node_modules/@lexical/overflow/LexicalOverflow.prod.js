/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';var c=require("lexical"),d;function f(a){let b=new URLSearchParams;b.append("code",a);for(let e=1;e<arguments.length;e++)b.append("v",arguments[e]);throw Error(`Minified Lexical error #${a}; visit https://lexical.dev/docs/error?${b} for the full message or `+"use the non-minified dev environment for full errors and additional helpful warnings.");}d=f&&f.__esModule&&Object.prototype.hasOwnProperty.call(f,"default")?f["default"]:f;
class g extends c.ElementNode{static getType(){return"overflow"}static clone(a){return new g(a.__key)}static importJSON(){return h()}static importDOM(){return null}constructor(a){super(a);this.__type="overflow"}createDOM(a){let b=document.createElement("span");a=a.theme.characterLimit;"string"===typeof a&&(b.className=a);return b}updateDOM(){return!1}insertNewAfter(a,b=!0){return this.getParentOrThrow().insertNewAfter(a,b)}excludeFromCopy(){return!0}static transform(){return a=>{k(a)||d(204);a.isEmpty()&&
a.remove()}}}function h(){return c.$applyNodeReplacement(new g)}function k(a){return a instanceof g}exports.$createOverflowNode=h;exports.$isOverflowNode=k;exports.OverflowNode=g
