/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

import{useLexicalComposerContext as e}from"@lexical/react/LexicalComposerContext";import{useLexicalNodeSelection as t}from"@lexical/react/useLexicalNodeSelection";import{addClassNamesToElement as r,mergeRegister as n,removeClassNamesFromElement as o}from"@lexical/utils";import{createCommand as c,DecoratorNode as i,$applyNodeReplacement as m,$getSelection as u,$isNodeSelection as a,CLICK_COMMAND as l,COMMAND_PRIORITY_LOW as s,KEY_DELETE_COMMAND as p,KEY_BACKSPACE_COMMAND as d}from"lexical";import{useCallback as f,useEffect as x}from"react";import{jsx as y}from"react/jsx-runtime";const g=c("INSERT_HORIZONTAL_RULE_COMMAND");function h({nodeKey:c}){const[i]=e(),[m,y,g]=t(c),h=f((e=>{const t=u();return m&&a(t)&&(e.preventDefault(),i.update((()=>{t.getNodes().forEach((e=>{_(e)&&e.remove()}))}))),!1}),[i,m]);return x((()=>n(i.registerCommand(l,(e=>{const t=i.getElementByKey(c);return e.target===t&&(e.shiftKey||g(),y(!m),!0)}),s),i.registerCommand(p,h,s),i.registerCommand(d,h,s))),[g,i,m,c,h,y]),x((()=>{const e=i.getElementByKey(c),t="selected";null!==e&&(m?r(e,t):o(e,t))}),[i,m,c]),null}class O extends i{static getType(){return"horizontalrule"}static clone(e){return new O(e.__key)}static importJSON(e){return E()}static importDOM(){return{hr:()=>({conversion:C,priority:0})}}exportDOM(){return{element:document.createElement("hr")}}createDOM(e){const t=document.createElement("hr");return r(t,e.theme.hr),t}getTextContent(){return"\n"}isInline(){return!1}updateDOM(){return!1}decorate(){return y(h,{nodeKey:this.__key})}}function C(){return{node:E()}}function E(){return m(new O)}function _(e){return e instanceof O}export{E as $createHorizontalRuleNode,_ as $isHorizontalRuleNode,O as HorizontalRuleNode,g as INSERT_HORIZONTAL_RULE_COMMAND};
